@model CTS.MVC.ExpenseApp.Models.EstablishmentViewModel

@{
    ViewBag.Title = "EstablishmentView";
}


<h3>Register Common Establishments</h3>
<div class="row span10">

    <div class="table centerContent row">
        <table class=" centerContent ">

            <thead>
                <tr>
                    <th>Establishment 
                    </th>
                </tr>
            </thead>
            <tr>
                <td>click to edit establishment 
                </td>
            </tr>
            <tr>
                <td>
                    <div id="establishmentTableWrapper">@{Html.RenderPartial("_EstablishmentTable", Model);}</div>
                    </td>
            </tr>

        </table>
        <br />
        <span id="lblStatus" class="alert "></span>
    </div>

    <div class="input-append centerContent">
        <label class="centerContent"><b>Establishment Name</b></label>
        <input id="txtEstablishmentID" type="hidden" />
        <input id="txtEstablishmentName" type="text" placeholder="Establishment Name ..." />
        <button id="btnAddEditEstablishment" class="btn btn-success" type="button">Add</button>
        <button class="btn btn-warning" id="btnCancelEstablishment">Cancel</button>

    </div>

</div>

<script type="text/javascript">
    // this is the click event that sets up the page for a edit 
    $('body').on('click', '[id^=establishmentLink]', function (event) {


        $('#btnAddEditEstablishment').html("Update");

        var selectedEstablishmentID = $(this).attr('data-EstablishmentID');
        var selectedEstablishmentName = $(this).attr('data-EstablishmentName');


        $('#txtEstablishmentName').val(selectedEstablishmentName);
        $('#txtEstablishmentID').val(selectedEstablishmentID);
        txtEstablishmentName.focus();
    });

    // this click evetn handels the cancel button click 
    $('body').on('click', '#btnCancelEstablishment', function (event) {

        resetPage();
    });

    // click event for delete client 
    $('body').on('click', '[id^=btnDeleteEstablishment]', function (event) {


        var selectedEstablishmentId = $(this).attr('data-EstablishmentID');
        var selectedEstablishmentName = $(this).attr('data-EstablishmentName');
        var confirmDelete = window.confirm("Remove: " + selectedEstablishmentName + "\n\n" +
            "               do you wish to continue ? ");
        if (confirmDelete) {
            // post to server and remove the Establishment 
            deleteEstablishment(selectedEstablishmentId, selectedEstablishmentName);
        }
        else {
            $('#lblStatus').text("delete has been canceled");
        }

    });

    // post to server to delete Establishment from DB
    function deleteEstablishment(selectedEstablishmentID, selectedEstablishmentName) {
        $.ajax(
             {
                 type: "POST",
                 url: '@Url.Action("DeleteEstablishment", "ReportsList")',
                 data: { establishmentID: selectedEstablishmentID },
                 success: function (data) {
                     // replace the table content with the partialview
                     $('#establishmentTableWrapper').html(data);
                     $('#lblStatus').text(selectedEstablishmentName + ", has been removed.");
                     //rebindLinks();
                 },
                 error: function (xhr, status, error) {// here the Ajax post was unsccuessful

                     alert("Wahoooo something broke server side ")
                 }
             });

         };


         // this is the click event that handels add and edits 
         $('body').on('click', '#btnAddEditEstablishment', function (event) {

             // validate input 

             var inputValidation = validateText($('#txtEstablishmentName').val().trim());

             if (inputValidation === false) {

                 $('#lblStatus').text("Please provide an establishment name!")
                 txtEstablishmentName.focus()
             }
             else {
                 if ($('#txtEstablishmentID').val().length <= 0) {// since we do not have an active ID we will add a new est

                     var establishmentName = $('#txtEstablishmentName').val().trim()
                     addEditEstablishment(establishmentName, 0)

                     $('#lblStatus').text("New Establishment has been added ")



                 }

                 else {// there is an ID there so it is an Edit 

                     var establishmentName = $('#txtEstablishmentName').val().trim()
                     var establishmenID = $('#txtEstablishmentID').val().trim()

                     addEditEstablishment(establishmentName, establishmenID)
                     $('#lblStatus').text("New Establishment has been updated ")

                 }


                
             }



         });

         //function to add edit est makes a post to server 
         function addEditEstablishment(establishmentName, establishmentID) {
             $.ajax(
              {
                  type: "POST",
                  url: '@Url.Action("AddEditEstablishment", "ReportsList")',
                  data: { establishmentName: establishmentName, establishmentID: establishmentID },
                  success: function (data) {
                      // replace the table content with the partialview
                      $('#establishmentTableWrapper').html(data);
                      
                      //rebindLinks();
                      $('#txtEstablishmentName').val("");
                      $('#txtEstablishmentID').val("");

                  },
                  error: function (xhr, status, error) {// here the Ajax post was unsccuessful

                      DisplayError(xhr); /// this method will extract the custom error message thrown by server
                  }
              });

          }

          // common functions------------------------------------------------- :
          // validates textbox to be sure there is user input 
          function validateText(stringToValidate) {

              if (stringToValidate.length <= 0) {
                  meetsCritiria = false;
              }
              else {
                  meetsCritiria = true;
              }
              return meetsCritiria;
          };

          // resets the page when the cancel btn is pressed 
          function resetPage() {
              $('#txtEstablishmentID').val("");
              $('#txtEstablishmentName').val("");
              $('#lblStatus').text("");
              $('#btnAddEditEstablishment').html("Add");
              //hideDiv();

          }


</script>
